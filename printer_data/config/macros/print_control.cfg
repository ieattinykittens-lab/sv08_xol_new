# ==================== PRINT CONTROL MACROS ====================
# ==================== macros/print_control.cfg ====================
# Main print control operations: start, end, pause, resume, cancel

[gcode_macro _APPLY_BEACON_MATERIAL_OFFSET]
description: Apply material-specific Z offset to Beacon model
gcode:
    {% set material = params.MATERIAL|default("PLA")|string|upper %}
    {% set offsets = printer['gcode_macro _global_var'].beacon_material_offsets %}
    {% set offset = offsets[material]|default(0.0)|float %}
    
    {% if offset != 0.0 %}
        SET_GCODE_OFFSET Z={offset}
        Z_OFFSET_APPLY_PROBE
        SET_GCODE_OFFSET Z=0
    {% else %}
    {% endif %}

[gcode_macro START_PRINT]
description: Optimized start print sequence with material-based chamber control and Beacon proximity meshing
variable_state: 'Prepare'
variable_record_extruder_temp: 0
variable_max_record_extruder_temp: 0
gcode:

    {% set bedtemp = params.BED_TEMP|default(60)|int %}
    {% set hotendtemp = params.EXTRUDER_TEMP|default(230)|int %}
    {% set heatsoak = params.HEATSOAK|default(true)|int %}
    {% set material = params.MATERIAL|default("PLA")|string|upper %}

    # Get chamber target from material lookup table
    {% set filament_temps = printer['gcode_macro _global_var'].filament_chamber_temps %}
    {% set chamber_target = filament_temps[material]|default(0) %}

    {% set prime_amount = printer['gcode_macro _global_var'].prime_amount|float %}

    # Clear any previous M141 settings to avoid conflicts
    SET_GCODE_VARIABLE MACRO=_CHAMBER_CONTROL VARIABLE=target_temp VALUE=0

    M400
    CLEAR_PAUSE
    BED_MESH_CLEAR
    G90

    {% if state == 'Prepare' %}

        # For materials requiring chamber heating, do chamber conditioning FIRST
        {% if chamber_target > 0 and heatsoak == true %}
            # Set bed to proper temperature for chamber heating (100°C minimum for enclosed materials)
            {% set chamber_bed_temp = [bedtemp, 100]|max %}
            M140 S{chamber_bed_temp}

            {% if printer.heater_bed.temperature < chamber_bed_temp %}
                M190 S{chamber_bed_temp}
            {% endif %}

            # Do chamber conditioning with heat soak
            #_HEAT_SOAK_CHAMBER BED_TEMP={chamber_bed_temp} MATERIAL={material} CHAMBER={chamber_target}

        {% else %}
            # No chamber heating required - start bed heating
            M140 S{bedtemp}

            {% if printer.heater_bed.temperature < bedtemp %}
                M190 S{bedtemp}
            {% endif %}

            #{% if heatsoak == true %}
                #_HEAT_SOAK_CHAMBER BED_TEMP={bedtemp} MATERIAL={material} CHAMBER={chamber_target}
            {#% endif %}
        {% endif %}

        # Heat nozzle to 150°C for accurate probing and cleaning
        M109 S150

        # Ensure X/Y are homed before any Z operations
        {% if "xy" not in printer.toolhead.homed_axes %}
            G28 X Y
        {% endif %}

        # QGL with proximity probing for speed
        {% if printer.quad_gantry_level.applied|lower != 'true' %}
            QUAD_GANTRY_LEVEL PROBE_METHOD=proximity
        {% endif %}

        # Non-tap home after QGL (always runs)
        G28 Z METHOD=proximity

        # Clean nozzle
        #CLEAN_NOZZLE

        # Final tap home (contact calibrate) after cleaning
        G28 Z METHOD=contact CALIBRATE=1

        # Apply material-specific offset after final calibration
        _APPLY_BEACON_MATERIAL_OFFSET MATERIAL={material}

        # Use proximity (scan mode) for fast, accurate bed meshing
        BED_MESH_CALIBRATE ADAPTIVE=1 PROBE_METHOD=proximity

        # Force mesh save/load for consistency
        BED_MESH_PROFILE SAVE=adaptivemesh
        BED_MESH_PROFILE LOAD=adaptivemesh

        M400

        SMART_PARK

        # Heat nozzle to print temperature after all probing
        M109 S{hotendtemp}

        G1 E{prime_amount} F300

        LINE_PURGE
    {% endif %}

[gcode_macro END_PRINT]
variable_state: 'normal'
gcode:
    {% set z_max = printer['gcode_macro _global_var'].z_maximum_lifting_distance|int %}
    {% set e_mintemp = printer.configfile.settings['extruder'].min_extrude_temp %}

    M400
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=state VALUE='"Prepare"'
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=record_extruder_temp VALUE=0
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=max_record_extruder_temp VALUE=0

    G91
    {% if (printer.extruder.target != 0 and printer.extruder.temperature >= printer.extruder.target) or
          printer.extruder.temperature >= e_mintemp
    %}
        G1 E-2 F2700
        G1 E-2 Z0.2 F2400
    {% endif %}

    {% if (printer.gcode_move.position.z + 25) < z_max %}
        G1 Z+25 F3000
    {% else %}
        G1 Z+{(z_max - printer.gcode_move.position.z)} F3000
    {% endif %}
    G90
    G1 X0 Y348 F9000

    _ALL_FAN_OFF
    TURN_OFF_HEATERS

    M84 X Y Z E
    M220 S100
    M221 S100

    CLEAR_PAUSE
    BED_MESH_CLEAR

    # Set to bright green (completed) and hold it for 5 seconds, then go to white
    G4 P5000

[gcode_macro PAUSE]
rename_existing: PAUSE_BASE
variable_state: 'normal'
gcode:
    {% if printer.pause_resume.is_paused == False %}
        {% set e_restract = printer['gcode_macro _global_var'].pause_park.e|float %}
        {% set filament_change_retract = printer['gcode_macro _global_var'].filament_change_retract|float %}
        {% set unload_retract = printer['gcode_macro _global_var'].unload_retract_amount|float %}

        {% set state = params.STATE if 'filament_change' in params.STATE else 'normal' %}


        PAUSE_BASE

        PARK_FOR_PAUSE

        M104 S{printer.extruder.target}

        {% if state == 'normal' %}
            {% if (printer.extruder.temperature + 5 >= printer.extruder.target) and (printer.extruder.temperature >= printer.configfile.settings['extruder'].min_extrude_temp) %}
                G91
                G1 E-{e_restract} F300
                G90
            {% endif %}
        {% elif state == 'filament_change' %}
            {% if (printer.extruder.temperature + 5 >= printer.extruder.target) and (printer.extruder.temperature >= printer.configfile.settings['extruder'].min_extrude_temp) %}
                G91
                G1 E+{filament_change_retract} F300
                G1 E-10 F1500
                G1 E-20 F600
                M400
                G4 P3000
                G1 E-{unload_retract} F300
                G90
            {% endif %}
        {% endif %}

    {% else %}
        _LOG_WARNING MSG="Print already paused"
    {% endif %}

[gcode_macro RESUME]
rename_existing: RESUME_BASE
variable_state: 'normal'
gcode:
    {% set e_restract = printer['gcode_macro _global_var'].pause_park.e|float %}
    {% set load_prime = printer['gcode_macro _global_var'].load_prime_amount|float %}
    {% set extruder_target_temp = printer.extruder.target|int %}

    {% set state = params.STATE if 'filament_change' in params.STATE else 'normal' %}

    {% if state == 'filament_change' %}
        {% if printer.extruder.temperature + 5 >= printer.extruder.target %}
            G91
            G1 E{load_prime} F300
            G1 E10 F150
            G90
        {% else %}
            M104 S{extruder_target_temp}
            M109 S{extruder_target_temp}
            G91
            G1 E{load_prime} F300
            G1 E10 F150
            G90
        {% endif %}
        RESUME_BASE
    {% elif state == 'normal' %}
        G91
        G1 E{e_restract} F300
        G90
        RESUME_BASE
        #SET_FAN_SPEED FAN=hotend_cooling_fan SPEED={printer['gcode_macro _global_var'].hotend_cooling_fan_speed}
    {% endif %}

[gcode_macro CANCEL_PRINT]
rename_existing: CANCEL_PRINT_BASE
gcode:
    {% set e_restract = printer['gcode_macro _global_var'].cancel_park.e|float %}
    {% set e_mintemp = printer.configfile.settings['extruder'].min_extrude_temp %}

    CANCEL_PRINT_BASE

    G91
    {% if (printer.extruder.target != 0 and printer.extruder.temperature >= printer.extruder.target) or
          printer.extruder.temperature >= e_mintemp
    %}
        G1 E-{e_restract} F500
    {% else %}
        _LOG_WARNING MSG="Nozzle not hot enough for retraction"
    {% endif %}

    PARK_FOR_CANCEL

    TURN_OFF_HEATERS
    _ALL_FAN_OFF

    CLEAR_PAUSE
    M84 X Y Z E

    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=state VALUE='"Prepare"'
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=record_extruder_temp VALUE=0
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=max_record_extruder_temp VALUE=0

[gcode_macro M600]
gcode:
    PAUSE STATE=filament_change

# ==================== BEACON UTILITY MACROS ====================

[gcode_macro BEACON_ACCURACY_TEST]
description: Run probe accuracy test with current Beacon setup
gcode:
    {% set samples = params.SAMPLES|default(10)|int %}
    PROBE_ACCURACY SAMPLES={samples} PROBE_METHOD=proximity

[gcode_macro BEACON_CONTACT_ACCURACY_TEST]
description: Run contact probe accuracy test
gcode:
    {% set samples = params.SAMPLES|default(10)|int %}
    PROBE_ACCURACY SAMPLES={samples} PROBE_METHOD=contact
